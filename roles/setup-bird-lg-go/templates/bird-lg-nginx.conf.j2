{# FIXME: does jinja2 have a re.escape filter? #}
{% set webtrace_supported_servers_re = '(' + '|'.join(groups['webtrace']) + ')' %}
{% set multi_traceroute_error = "Sorry, multi-server traceroute is no longer supported. Please select a single server and you'll be redirected to the new webtrace interface.\n"%}
# dn42
server {
    listen 80;
    listen [::]:80;
    server_name {{ birdlg_vhost }};

    access_log /var/log/nginx/dn42-lg-access.log;
    error_log /var/log/nginx/dn42-lg-error.log;

    # restricted to dn42 origins only
    allow 10.0.0.0/8;
    allow 172.20.0.0/14;
    allow 172.31.0.0/16;
    allow fd00::/8;
    deny all;

    location ~ ^/traceroute/(.*?)\+(.*?)/ {
        add_header Content-Type text/plain always;
        return 404 "{{ multi_traceroute_error }}";
    }
    location ~ ^/traceroute/{{ webtrace_supported_servers_re }}/([^/]+) {
        return http://$1{{ dns_auto_host_record_suffix }}.{{ dns_domain }}/webtrace/?target=$2;
    }

    location / {
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://127.0.0.1:{{ birdlg_web_port }};
    }

}

# clearnet
server {
    listen 80;
    listen [::]:80;
    server_name {{ birdlg_vhost_clearnet }};

    return 301 https://{{ birdlg_vhost_clearnet }}$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name {{ birdlg_vhost_clearnet }};

    access_log /var/log/nginx/dn42-lg-access.log;
    error_log /var/log/nginx/dn42-lg-error.log;

    ssl_trusted_certificate /etc/letsencrypt/live/{{ birdlg_vhost_clearnet }}/chain.pem;
    ssl_certificate /etc/letsencrypt/live/{{ birdlg_vhost_clearnet }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ birdlg_vhost_clearnet }}/privkey.pem;

    location /.well-known {
        root /var/www/html;
    }

    location ~ ^/traceroute/(.*?)\+(.*?)/ {
        add_header Content-Type text/plain always;
        return 404 "{{ multi_traceroute_error }}";
    }
    location ~ ^/traceroute/{{ webtrace_supported_servers_re }}/([^/]+) {
        {# FIXME: this hardcodes the server suffix #}
        return https://$1.peer.highdef.network/webtrace/?target=$2;
    }

    location ~ ^/(api|generic|route_generic|route_where|route_from_protocol) {
        add_header Content-Type text/plain always;
        return 403 "This endpoint is not available over clearnet. Please access it at {{ birdlg_vhost }}\n";
    }

    location / {
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://127.0.0.1:{{ birdlg_web_port }};
    }

}
