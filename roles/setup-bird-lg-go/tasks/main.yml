- name: Set configuration variables
  set_fact:
    _bird_lg_go_dir: "{{ automation_root_dir }}/bird-lg-go"

- name: Create bird-lg-go directory
  file:
    path: "{{ _bird_lg_go_dir }}"
    state: directory

- name: Download bird-lg-go binary package
  get_url:
    # FIXME: this should be more flexible with architectures
    url: https://dl.highdef.network/bird-lg-go/0.20220223.2/bird-lg-go_0.20220223.2_linux_amd64.tar.gz
    dest: "{{ _bird_lg_go_dir }}/bird-lg-go.tar.gz"
    checksum: "sha256:ea299aae1b5a4ebe2acea2f1b6b13272703a33dfb35d138d646f72af2aff28f4"
    mode: "0644"

- name: Extract bird-lg-go binary package
  unarchive:
    src: "{{ _bird_lg_go_dir }}/bird-lg-go.tar.gz"
    dest: "{{ _bird_lg_go_dir }}/"
    remote_src: yes

- name: Generate bird-lg-go configs
  template:
    src: "bird-lg-{{ item }}.env.j2"
    dest: "{{ _bird_lg_go_dir }}/bird-lg-{{ item }}.env"
  loop:
    - proxy
    - frontend

- name: Install bird-lg-go systemd services
  template:
    src: "bird-lg-{{ item }}.service.j2"
    dest: "/etc/systemd/system/bird-lg-{{ item }}.service"
  loop:
    - proxy
    - frontend

- name: Start bird-lg-go proxy service
  systemd:
    name: "bird-lg-proxy"
    enabled: true
    state: restarted
    daemon_reload: true

- name: Start bird-lg-go frontend service
  systemd:
    name: "bird-lg-frontend"
    enabled: true
    state: restarted
  when: "'web' in group_names"

- name: Configure bird-lg-go in nginx
  include_role:
    name: apps_nginx
  vars:
    letsencrypt_domains:
      - "{{ birdlg_vhost_clearnet }}"
    nginx_site:
      src: bird-lg-nginx.conf.j2
      dst: bird-lg-nginx.conf
  when: "'web' in group_names"
