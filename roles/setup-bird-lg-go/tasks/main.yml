- name: Set configuration variables
  set_fact:
    _bird_lg_go_dir: "{{ automation_root_dir }}/bird-lg-go"
    _bird_lg_go_version: 1.2.0

- name: Create bird-lg-go directory
  file:
    path: "{{ _bird_lg_go_dir }}"
    state: directory

- name: Download bird-lg-go binary package
  get_url:
    # FIXME: this should be more flexible with architectures
    url: "https://github.com/xddxdd/bird-lg-go/releases/download/v{{ _bird_lg_go_version }}/bird-lg-go-v{{ _bird_lg_go_version }}-linux-amd64.tar.gz"
    dest: "{{ _bird_lg_go_dir }}/bird-lg-go.tar.gz"
    checksum: "md5:30ccd4b20a9f5a6ddcfe04040b7d43da"
    mode: "0644"

- name: Extract bird-lg-go binary package
  unarchive:
    src: "{{ _bird_lg_go_dir }}/bird-lg-go.tar.gz"
    dest: "{{ _bird_lg_go_dir }}/"
    remote_src: yes

- name: Download bird-lgproxy-go binary package
  get_url:
    # FIXME: this should be more flexible with architectures
    url: "https://github.com/xddxdd/bird-lg-go/releases/download/v{{ _bird_lg_go_version }}/bird-lgproxy-go-v{{ _bird_lg_go_version }}-linux-amd64.tar.gz"
    dest: "{{ _bird_lg_go_dir }}/bird-lgproxy-go.tar.gz"
    checksum: "md5:f2e18594ecd5661cf7a94461901f7024"
    mode: "0644"

- name: Extract bird-lgproxy-go binary package
  unarchive:
    src: "{{ _bird_lg_go_dir }}/bird-lgproxy-go.tar.gz"
    dest: "{{ _bird_lg_go_dir }}/"
    remote_src: yes

- name: Remove obsolete bird-lg-go binaries
  file:
    path: "{{ item }}"
    state: absent
  loop:
  - "{{ _bird_lg_go_dir }}/frontend"
  - "{{ _bird_lg_go_dir }}/proxy"

- name: Generate bird-lg-go configs
  template:
    src: "bird-lg-{{ item }}.env.j2"
    dest: "{{ _bird_lg_go_dir }}/bird-lg-{{ item }}.env"
  loop:
    - proxy
    - frontend

- name: Install bird-lg-go systemd services
  template:
    src: "bird-lg-{{ item }}.service.j2"
    dest: "/etc/systemd/system/bird-lg-{{ item }}.service"
  loop:
    - proxy
    - frontend

- name: Start bird-lg-go proxy service
  systemd:
    name: "bird-lg-proxy"
    enabled: true
    state: restarted
    daemon_reload: true

- name: Start bird-lg-go frontend service
  systemd:
    name: "bird-lg-frontend"
    enabled: true
    state: restarted
  when: "'web' in group_names"

- name: Configure bird-lg-go in nginx
  include_role:
    name: apps_nginx
  vars:
    letsencrypt_domains:
      - "{{ birdlg_vhost_clearnet }}"
    nginx_site:
      src: bird-lg-nginx.conf.j2
      dst: bird-lg-nginx.conf
  when: "'web' in group_names"
