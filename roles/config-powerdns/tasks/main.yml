
- name: Download GeoIP database from db-ip.com
  get_url:
    url: https://download.db-ip.com/free/dbip-country-lite-2021-07.mmdb.gz
    dest: "{{ automation_root_dir }}/dbip-country-lite.mmdb.gz"
    mode: '0640'
    owner: root
    group: pdns
  when: serve_clearnet_dns|default(False)

- name: Extract GeoIP database
  command: "gunzip -k dbip-country-lite.mmdb.gz"
  args:
    chdir: "{{ automation_root_dir }}"
    creates: "{{ automation_root_dir }}/dbip-country-lite.mmdb"
  when: serve_clearnet_dns|default(False)

- name: "Enumerate PowerDNS backends"
  set_fact:
    _pdns_local_address: "{{ (dummy_interfaces.anycast_auth_dns.ip4 + dummy_interfaces.anycast_auth_dns.ip6) | join(', ') }}"
    _pdns_backends:
      bind:
        config: "/etc/powerdns/named.conf"

- name: "Enumerate PowerDNS backends (GeoIP)"
  set_fact:
    _pdns_local_address: "{{ (dummy_interfaces.anycast_auth_dns.ip4 + dummy_interfaces.anycast_auth_dns.ip6 + [ansible_default_ipv4.get('address', 0), ansible_default_ipv6.get('address', 0)]) | select('string') | join(', ') }}"
    _pdns_backends:
      bind:
        config: "/etc/powerdns/named.conf"
      geoip:
        zones-file: "/etc/powerdns/geodns.yml"
        database-files: "{{ automation_root_dir }}/dbip-country-lite.mmdb"
  when: serve_clearnet_dns|default(False)

- name: "Create PowerDNS config folder"
  file:
    path: "/etc/powerdns"
    state: directory

- name: "Upload geodns.yml for PowerDNS"
  copy:
    src: "geodns.yml"
    dest: "/etc/powerdns/geodns.yml"
    mode: '0644'
  notify:
    - Reconfigure PowerDNS
  when: serve_clearnet_dns|default(False)

- name: "Template named.conf for PowerDNS"
  template:
    src: "named.conf.j2"
    dest: "/etc/powerdns/named.conf"
    mode: '0644'
  notify:
    - Reconfigure PowerDNS

- import_role:
    name: PowerDNS.pdns
  vars:
    # PowerDNS 4.3.x
    pdns_install_repo: "{{ pdns_auth_powerdns_repo_43 if ansible_distribution_release == 'buster' else '' }}"
    pdns_config:
      local-address: "{{ _pdns_local_address }}"
    pdns_backends: "{{ _pdns_backends }}"

- name: "Synchronize DNS zones"
  synchronize:
    src: "{{ playbook_dir }}/global-config/dns-zones/"
    dest: "{{ dns_zones_dir }}"
    checksum: true
    archive: false
    delete: true
    recursive: true
  notify:
    - Reconfigure PowerDNS
