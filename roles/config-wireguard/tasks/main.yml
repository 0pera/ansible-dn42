- name: Read Wireguard tunnel settings (v2)
  include_vars:
    file: "{{ role_path }}/config/{{ inventory_hostname }}.yml"
  ignore_errors: true

# This is already read in once as part of group_vars/all, but the values may have been changed
# by scripts/enumerate-igp-tunnels.py: pre_tasks still run after enumerating facts the first time
- name: Read IGP tunnel settings
  include_vars:
    file: "global-config/igp-tunnels.yml"

- name: Clean up obsolete tunnels for peers
  include_tasks: "remove-wg-settings.yml"
  loop: "{{ wg_peers | default([]) }}"
  loop_control:
    loop_var: peer_info
  when: peer_info.get('remove')

- name: Clean up unused interfaces
  include_tasks: "remove-wg-settings.yml"
  loop: "{{ cleanup_remove_ifaces | default([]) }}"
  vars:
    peer_info:
      name: "{{ item }}"
      # This task file doesn't require any other vars

- name: Write Wireguard tunnel settings for peers (v2)
  include_tasks: "write-wg-settings.yml"
  loop: "{{ wg_peers | default([]) }}"
  loop_control:
    loop_var: peer_info
  when: not peer_info.get('remove')

- name: Write Wireguard tunnel settings for internal nodes (v2)
  include_tasks: "write-wg-settings.yml"
  loop: "{{ igp_neighbours[inventory_hostname] | sort }}"
  loop_control:
    loop_var: igp_node
  vars:
    # XXX: ugly substitutions...
    peer_info:
      name: "igp-{{ hostvars[igp_node]['shortname'] }}"
      port: "{{ igp_wg_ports['%s,%s' % (inventory_hostname, igp_node)] }}"
      remote: "{{ igp_node }}:{{ igp_wg_ports['%s,%s' % (inventory_hostname, igp_node)] }}"
      wg_pubkey: "{{ hostvars[igp_node]['wg_pubkey'] }}"
      peer_v4: "{{ hostvars[igp_node]['peering_lan_ip'] }}"
      peer_v6: "{{ hostvars[igp_node]['link_local_ip6'] }}"
      is_internal_node: true
