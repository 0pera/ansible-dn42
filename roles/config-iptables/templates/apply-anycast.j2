#!/bin/bash
# Apply anycast NAT rules for 172.23.0.53 and friends

if [[ $EUID -ne 0 ]]; then
	echo "This script must be run as root."
	exit 1
fi

service_name="$(basename "$2")"

apply_rules() {
{% for service_name, anycast_iface in dummy_interfaces.items() %}
{% if not anycast_iface.igp_announce %}
	if [[ "$service_name" == "{{ service_name }}" ]]; then
{% for anycast_nat_internal in anycast_iface.ip4 %}
{% set anycast_nat_internal = anycast_nat_internal|quote %}
{% set anycast_nat_external = (anycast_iface.ip4_natmap)[loop.index0]|quote %}
		# {{ anycast_nat_internal }} (internal) <-> {{ anycast_nat_external }} (external)
		iptables -t nat "$1" PREROUTING -d {{ anycast_nat_external }} -j DNAT --to-destination {{ anycast_nat_internal }}
		iptables -t nat "$1" OUTPUT -d {{ anycast_nat_external }} -j DNAT --to-destination {{ anycast_nat_internal }}
		iptables -t nat "$1" POSTROUTING -s {{ anycast_nat_internal }} -j SNAT --to-source {{ anycast_nat_external }}
{% endfor %}
		echo "Done iptables $1 for $service_name NAT rules"
		return
	fi
{% endif %}
{% endfor %}
}

if [[ "$1" == "start" ]]; then
	apply_rules "-D"  # avoid creating duplicate rules
	apply_rules "-A"
	if [[ -f "/etc/bird/autoservice-available/$service_name.conf" ]]; then
		cd /etc/bird/autoservice-enabled && ln -s "../autoservice-available/$service_name.conf"
		echo "Added link for $service_name autoservice routes"
		birdc configure || true
	fi

elif [[ "$1" == "stop" ]]; then
	apply_rules "-D"
	rm -fv "/etc/bird/autoservice-enabled/$service_name.conf" "/etc/bird/local_acs_recursors.conf"
	birdc configure || true
else
	echo "Unknown subcommand: expected start or stop"
	exit 1
fi
