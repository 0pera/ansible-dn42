#!/bin/bash
# Apply anycast NAT rules and static routes for 172.23.0.53 and friends

if [[ $EUID -ne 0 ]]; then
	echo "This script must be run as root."
	exit 1
fi

apply_rules() {
{% for anycast_nat_internal in dummy_interfaces.anycast_recursors.ip4+dummy_interfaces.anycast_auth_dns.ip4 %}
{% set anycast_nat_internal = anycast_nat_internal|quote %}
{% set anycast_nat_external = (dummy_interfaces.anycast_recursors.ip4_natmap + dummy_interfaces.anycast_auth_dns.ip4_natmap)[loop.index0]|quote %}
	iptables -t nat "$1" PREROUTING -d {{ anycast_nat_external }} -j DNAT --to-destination {{ anycast_nat_internal }}
	iptables -t nat "$1" OUTPUT -d {{ anycast_nat_external }} -j DNAT --to-destination {{ anycast_nat_internal }}
	iptables -t nat "$1" POSTROUTING -s {{ anycast_nat_internal }} -j SNAT --to-source {{ anycast_nat_external }}
{% endfor %}
}

if [[ "$1" == "start" ]]; then
	apply_rules "-D"  # avoid creating duplicate rules
	apply_rules "-A"
	echo "Configured NAT rules"
	cat > /etc/bird/local_acs_recursors.conf << "EOF"
protocol static static_acs4 {
	ipv4;
{% for anycast_iface in (dummy_interfaces.values() | list | rejectattr("igp_announce"))%}
{% for anycast_nat_external in anycast_iface.ip4_natmap %}
	route {{ anycast_nat_external | ipsubnet }} via "{{ anycast_iface.ifname }}";
{% endfor %}
{% endfor %}
}

protocol static static_acs6 {
	ipv6;
{% for anycast_iface in (dummy_interfaces.values() | list | rejectattr("igp_announce"))%}
{% for anycast_prefix in anycast_iface.ip6 %}
	route {{ anycast_prefix | ipsubnet | ansible.utils.ipaddr('0') }} via "{{ anycast_iface.ifname }}" {
		preference = 250;
	};
{% endfor %}
{% endfor %}
}
EOF
	echo "Configured static route configuration /etc/bird/local_acs_recursors.conf"
	birdc configure || true

elif [[ "$1" == "stop" ]]; then
	rm -f -v /etc/bird/local_acs_recursors.conf
	birdc configure || true
	apply_rules "-D"
	echo "Deconfigured NAT rules"
else
	echo "Unknown subcommand: expected start or stop"
	exit 1
fi
