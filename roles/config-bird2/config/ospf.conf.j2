{% macro ospf_areas(ospf_version) %}
area 0 {
    # Generated by Ansible
{% for host in igp_neighbours.get(inventory_hostname, []) %}
    interface "igp-{{ host }}" {
        cost
        include "{{ automation_root_dir }}/igpping/rxcost/{{ hostvars[host]['ansible_host'] }}.conf";;
        type ptp;
    };
{% endfor %}
{# In order: global stub ifname globs, local stub ifnames (appended), dummy interfaces with igp_announce=yes #}
{% for entry in stub_ifnames + stub_ifnames_append|default([]) + (dummy_interfaces.values() | list | selectattr("igp_announce") | map(attribute='ifname') | list) %}
    interface "{{ entry }}" {
        stub on;
    };
{% endfor %}
{% for entry in igp_neighbours_append|default([]) %}
    interface "{{ entry.name }}" {
        cost {{ entry.cost }};
    };
{% endfor %}
};
{% endmacro %}

protocol ospf v2 int_ospf {
    ipv4 {
        import where source != RTS_BGP && is_self_net();
        export where source != RTS_BGP && is_self_net();
    };
    {{ ospf_areas(2) }}
};

protocol ospf v3 int_ospf_v6 {
    ipv6 {
        import where source != RTS_BGP && is_self_net_v6();
        export where source != RTS_BGP && is_self_net_v6();
    };
    {{ ospf_areas(3) }}
};
