# Generated by Ansible
{% macro ibgp_link(nodedata, is_rr_downstream=False, is_rr_upstream=False) -%}
protocol bgp ibgp_{{ nodedata['shortname'] | replace("-", "_") }} {
    local as {{ ownas }};
    neighbor {{ nodedata['ownip6'] }} as {{ ownas }};
    source address {{ ownip6 }};
{% if is_rr_upstream %}
{# Slightly confusing: this directive means that the OPPOSITE end is the rr client #}
{# On the upstream side there is no difference between rr clients and regular peers #}
    rr client;
{% endif %}
    advertise hostname on;

    ipv4 {
        import where ibgp_import_filter();
{% if is_rr_downstream %}
{# Avoid exporting routes *from* private servers - internal services are routed using Babel #}
        export none;
{% else %}
        export where ibgp_export_filter();
{% endif %}
        next hop address {{ ownip }};
        next hop self;
    };

    ipv6 {
        import where ibgp_import_filter();
{% if is_rr_downstream %}
        export none;
{% else %}
        export where ibgp_export_filter();
{% endif %}
        next hop address {{ ownip6 }};
        next hop self;
    };
}
{%- endmacro %}

{# Template RR upstreams for (private) servers not in iBGP mesh #}
{% if ibgp_rr_upstreams is defined %}
{% for host in ibgp_rr_upstreams %}
{{ ibgp_link(hostvars[host], is_rr_downstream=True) }}
{% endfor %}
{% else %}
{# Template iBGP peers - always a mesh for dn42 routers #}
{% for host in groups['dn42routers'] %}
{% set nodedata = hostvars[host] %}
{% if host != inventory_hostname %}
{{ ibgp_link(nodedata) }}
{% endif %}
{% endfor %}
{# Template downstream private nodes (always RR clients).
   These sessions are used to provide connectivity to segments not routed via Babel,
   such as YVRLAB and Anycast DNS #}
{% for host in groups['private'] %}
{% set nodedata = hostvars[host] %}
{% if inventory_hostname in nodedata.get('ibgp_rr_upstreams', []) %}
{{ ibgp_link(nodedata, is_rr_upstream=True) }}
{% endif %}
{% endfor %}
{% endif %}
