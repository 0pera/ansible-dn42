protocol direct {
    ipv4;
    ipv6;
    interface "{{ dummy_ifname_glob }}";
};

{% macro internal_cost(nodedata) -%}
{# Costs are specified in internal_costs.yml.
   Only one of (A,B) and (B,A) have to be defined, to save space. #}
{{ (internal_costs.get('%s,%s' % (shortname, nodedata['shortname'])) or
    internal_costs.get('%s,%s' % (nodedata['shortname'], shortname)) or default_cost) + indirect_penalty }}
{%- endmacro %}

protocol babel int_babel {
    ipv4 {
        import where source != RTS_BGP && is_self_net();
        export filter {
            if (source != RTS_BGP && is_self_net()) then {
                if (babel_metric > 0) then {
                    igp_metric = babel_metric;
                }
                accept;
            }
            reject;
        };
    };
    ipv6 {
        import where source != RTS_BGP && is_self_net_v6();
        export filter {
            if (source != RTS_BGP && is_self_net_v6()) then {
                if (babel_metric > 0) then {
                    igp_metric = babel_metric;
                }
                accept;
            }
            reject;
        };
    };

    # Generated by Ansible
{% for host in igp_neighbours[inventory_hostname] %}
{% set nodedata = hostvars[host] %}
    interface "igp-{{ nodedata['shortname'] }}" {
        rxcost {{ internal_cost(nodedata) }};
    };
{% endfor %}
{% if babel_links is defined %}
{% for ifname, cost in babel_links.items() %}
    interface "{{ ifname }}" {
        rxcost {{ cost }};
    };
{% endfor %}
{% endif %}
};
