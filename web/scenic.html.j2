<!DOCTYPE html>
<html lang="en">
<head>
<title>Scenic Routing - highdef.network</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link href="style.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fork-awesome@1.1.7/css/fork-awesome.min.css" integrity="sha256-gsmEoJAws/Kd3CjuOQzLie5Q3yshhvmo7YNtBG7aaEY=" crossorigin="anonymous">
<!-- {% import 'helpers.j2' as helpers %} -->
</head>

<body>
<div class="main">
<h1>highdef.network</h1>
<h2>Scenic Routing üèñÔ∏è‚òÄÔ∏è</h2>
{% include 'navigation.j2' %}
<div class="container">

<h2>Overview</h2>

<p>To answer a silly question: what if each server preferred the <i>worst</i> BGP route: i.e. one with the longest path?</p>

<p>AS4242421080 provides scenic routing via the <a href="https://lg.highdef.network/">highdef.dn42 Looking Glass</a>:</p>

<ul>
    <li>To traceroute using the least optimal path, add <kbd>-t 4</kbd> (<a href="https://en.wikipedia.org/wiki/Type_of_service">TOS</a> 0x4) to the query: <br>
        e.g. <a href="https://lg.highdef.network/traceroute/sgp/172.20.66.67%20-t%204"><kbd>traceroute 172.20.66.67 -t 4</kbd></a>
    </li>
    <li>To inspect bgpmap for the least optimal path, add <kbd>table cursed</kbd> (IPv4) or <kbd>table cursed6</kbd> (IPv6) to the query: <br>
        e.g. <a href="https://lg.highdef.network/route_bgpmap/tyo/172.20.66.67%20table%20cursed"><kbd>bgpmap 172.20.66.67 table cursed</kbd></a><br>
        e.g. <a href="https://lg.highdef.network/route_bgpmap/tyo/fd42:d42:d42:54::1%20table%20cursed6"><kbd>bgpmap fd42:d42:d42:54::1 table cursed6</kbd></a>
    </li>
</ul>
<p>Note: to avoid putting unnecessary burden on other networks, only locally originated packets have the scenic routing policy filter enabled. (I may tweak this later)</p>

<h2>How?</h2>

<p>There are two components to this experiment:</p>

<ul>
    <li>The first part is a <a href="https://bird.network.cz/?get_doc&v=20&f=bird-6.html#ss6.11">pipe</a> protocol instance in Bird to copy the main route table into a secondary table. A <a href="https://github.com/jlu5/ansible-dn42/blob/main/roles/config-bird2/config/cursedpipe.conf">custom filter</a> is used here to set the route priority based on the BGP path length.
    </li>
    <li>The second part is a <a href="https://man7.org/linux/man-pages/man8/ip-rule.8.html">policy based routing rule</a> to redirect packets with a particular TOS and origin to this new table. The rules themselves look roughly like <a href="https://github.com/jlu5/ansible-dn42/blob/main/roles/setup-extra-scripts/templates/iprules.txt.j2">this</a>.</li>
</ul>

<h2>Challenge</h2>

<p>Try to find the longest traceroute (latency, number of hops, etc.)!</p>

<p>Submit your findings to this <a href="https://forms.gle/kmZGZofUzoMhTS9t6">Google Form</a> - I will create a gallery of the best submissions here afterwards!</p>

</div>
</div>
</body>
</html>
